# Generated by Django 4.1 on 2023-07-12 13:33

from django.db import migrations, models
import django.db.models.deletion
import simplepro.components.fields
import simplepro.editor.fields
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ("standard_encoding", "0001_initial"),
        ("project_server", "0001_initial"),
        ("products", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="TransactionEconomyIndustryProductsProductsServer",
            fields=[
                (
                    "ID",
                    models.UUIDField(
                        auto_created=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="标识",
                    ),
                ),
                (
                    "CREATE_TIME",
                    simplepro.components.fields.DateTimeField(
                        auto_now_add=True, verbose_name="创建时间"
                    ),
                ),
                (
                    "UPDATE_TIME",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "STATUS_IS_DELETE",
                    models.BooleanField(default=False, verbose_name="逻辑删除"),
                ),
                (
                    "STATUS_IS_EFFECTIVE",
                    models.BooleanField(default=True, verbose_name="是否有效"),
                ),
                (
                    "SERVER_PROT",
                    simplepro.components.fields.CharField(
                        blank=True, max_length=10, null=True, verbose_name="服务器端口"
                    ),
                ),
                (
                    "DETAIL",
                    simplepro.editor.fields.MDTextField(
                        blank=True, null=True, verbose_name="详情描述"
                    ),
                ),
            ],
            options={
                "verbose_name": "产品服务器",
                "verbose_name_plural": "产品服务器",
                "db_table": "TransactionEconomyIndustryProductsProductsServer",
                "ordering": ["-CREATE_TIME"],
            },
        ),
        migrations.AlterField(
            model_name="transactioneconomyindustryproductsbasis",
            name="DETAIL",
            field=simplepro.editor.fields.MDTextField(
                blank=True,
                default="# 产品详情描述\n\n## 基本信息\n\n>这些基本信息通常与产品与服务的分类和描述相关，并在产品目录、宣传资料、网站等地方提供。\n\n### 产品名称或服务类型\n\n#### 描述或规格\n\n>产品的特征、功能、规格或服务的范围和内容描述\n\n#### 品牌\n\n>产品或服务所属的品牌或商标\n\n## 定价与成本信息\n\n>定价与成本信息是与产品与服务的经济方面相关的重要信息。这些信息对于营销、利润分析和成本控制非常重要。\n\n### 定价\n\n>产品或服务的售价或定价策略\n\n### 成本\n\n>生产或提供产品或服务的成本结构、成本元素\n\n## 特性与功能信息\n\n>这些信息描述产品或服务的特性和功能，以便与竞争对手区分并满足客户需求。\n\n### 产品特性\n>产品的独特卖点、功能或技术特点\n\n### 服务特点\n\n>服务的特点、优势或价值主张\n\n## 技术与规格信息\n\n>技术与规格信息通常在需要满足特定要求或标准的产品或服务中使用，例如科技产品、工程项目等。\n\n### 技术规格\n\n>产品的技术要求、性能指标、技术标准等\n\n### 服务规格\n\n>服务的质量标准、交付要求等\n\n## 保修与支持信息\n\n>这些信息涉及到产品的保修和售后支持，以及服务的客户支持和反馈渠道。\n\n### 保修政策\n\n>产品的保修期限、保修范围、售后支持等\n\n### 服务支持\n\n>服务的支持方式、客户服务热线等\n\n## 安全与合规信息\n\n>这些信息与产品或服务的安全性、合规性和法律要求相关，确保产品或服务符合相关标准和规定。\n\n### 安全信息\n\n>产品或服务的安全注意事项、警示标志、合规要求等\n\n### 法律合规\n\n>产品或服务符合的法律法规、行业标准等",
                null=True,
                verbose_name="详情描述",
            ),
        ),
        migrations.CreateModel(
            name="TransactionEconomyIndustryProductsProductsServerAccount",
            fields=[
                (
                    "ID",
                    models.UUIDField(
                        auto_created=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="标识",
                    ),
                ),
                (
                    "CREATE_TIME",
                    simplepro.components.fields.DateTimeField(
                        auto_now_add=True, verbose_name="创建时间"
                    ),
                ),
                (
                    "UPDATE_TIME",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "STATUS_IS_DELETE",
                    models.BooleanField(default=False, verbose_name="逻辑删除"),
                ),
                (
                    "STATUS_IS_EFFECTIVE",
                    models.BooleanField(default=True, verbose_name="是否有效"),
                ),
                (
                    "ACCOUNT",
                    simplepro.components.fields.CharField(
                        blank=True, max_length=255, null=True, verbose_name="账户"
                    ),
                ),
                (
                    "PASSWORD",
                    simplepro.components.fields.CharField(
                        blank=True, max_length=255, null=True, verbose_name="密码"
                    ),
                ),
                (
                    "ACCOUNT_IDENTITY",
                    simplepro.components.fields.CharField(
                        blank=True, max_length=255, null=True, verbose_name="账户身份"
                    ),
                ),
                (
                    "AFFILIATED_PERSONNEL",
                    simplepro.components.fields.CharField(
                        blank=True, max_length=255, null=True, verbose_name="所属人员"
                    ),
                ),
                (
                    "DETAIL",
                    simplepro.editor.fields.MDTextField(
                        blank=True, null=True, verbose_name="详情描述"
                    ),
                ),
                (
                    "ID_PRODUCTS_SERVER",
                    simplepro.components.fields.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.transactioneconomyindustryproductsproductsserver",
                        verbose_name="产品服务器",
                    ),
                ),
            ],
            options={
                "verbose_name": "产品服务器账户",
                "verbose_name_plural": "产品服务器账户",
                "db_table": "TransactionEconomyIndustryProductsProductsServerAccount",
                "ordering": ["-CREATE_TIME"],
            },
        ),
        migrations.AddField(
            model_name="transactioneconomyindustryproductsproductsserver",
            name="ID_PRODUCTS",
            field=simplepro.components.fields.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="products.transactioneconomyindustryproductsbasis",
                verbose_name="产品",
            ),
        ),
        migrations.AddField(
            model_name="transactioneconomyindustryproductsproductsserver",
            name="PROJECT_SERVER_ID",
            field=simplepro.components.fields.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="project_server.transactioneconomyindustryproductsprojectserver",
                verbose_name="服务器",
            ),
        ),
        migrations.AddField(
            model_name="transactioneconomyindustryproductsproductsserver",
            name="SERVER_ENVIRONMENT",
            field=simplepro.components.fields.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="产品服务器环境",
                to="standard_encoding.provenancesystemsettingsstandardcodemaindict",
                verbose_name="服务器环境",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="transactioneconomyindustryproductsproductsserver",
            unique_together={
                (
                    "ID_PRODUCTS",
                    "PROJECT_SERVER_ID",
                    "SERVER_PROT",
                    "SERVER_ENVIRONMENT",
                )
            },
        ),
    ]
